

autowatch = 1;


var Live = new Object();

Live.api = new LiveAPI(this.patcher);
Live.Panner = function(pans) {
  this.Init = function(pans) {
    this.pans = pans.length ? pans : Live.Panner.Default;
    this.pan = 0;
  };
  this.Next = function() {
    this.OutputPan();
    if (++this.pan >= this.pans.length)
      this.pan = 0;
  };

  this.OutputPan = function() {
    this.Outlet(this.Convert(this.pans[this.pan]));
  };

  this.Convert = function(x) {
    return Math.round(127 * (x + 1) / 2);
  };

  this.Outlet = function(_) {
    outlet(0, arrayfromargs(arguments));
  };

};

Live.Panner.Default = [
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0, -1, 0, 1,
  -1, 0, 1, 0, -1,
  1, 0, -1, 0, 1,
  1, -1, 1, -1, 1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0, -1, 0, 1,
  -1, 0, 1, 0, -1,
  1, 0, -1, 0, 1,
  1, -1, 1, -1, 1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0, -1, 0, 1,
  -1, 0, 1, 0, -1,
  1, 0, -1, 0, 1,
  1, -1, 1, -1, 1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,
  1, 0.5, 0, -0.5, -1,

  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,
  -1, -0.5, 0, 0.5, 1,

  1, 0, -1, 0, 1,
  -1, 0, 1, 0, -1,
  1, 0, -1, 0, 1,
  1, -1, 1, -1, 1,
];
var panner = new Live.Panner();
panner.Init(jsarguments.slice(1));
function note(note, velocity) {
  if (velocity)
    panner.Next();
};
function set(_) {
  panner.Init(arrayfromargs(arguments));
};
post('recompiled megapan.jso\n');
